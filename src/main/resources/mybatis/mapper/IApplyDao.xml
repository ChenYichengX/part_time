<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:写接口的全类名，相当于告诉 MyBatis 这个配置文件实现哪个接口 -->
<mapper namespace="com.chen.part_time.dao.IApplyDao">

    <resultMap id="applyInfo" type="com.chen.part_time.vo.ApplyInfoVo">
        <id property="part_time_id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="type_name" column="name"></result>
        <result property="publishDate" column="publishDate"></result>
        <result property="price" column="price"></result>
        <result property="user_id" column="user_id"></result>
        <result property="doing" column="doing"></result>

        <collection property="stus" javaType="java.util.ArrayList" ofType="com.chen.part_time.vo.ApplyStu">
            <result property="student_id" column="student_id"></result>
            <result property="username" column="username"></result>
            <result property="apply_time" column="apply_time"></result>
            <result property="start_time" column="start_time"></result>
            <result property="over_time" column="over_time"></result>
            <result property="phone" column="phone"></result>
            <result property="choose" column="choose"></result>
        </collection>
    </resultMap>

    <!-- boolean addApply(Apply apply); -->
    <insert id="addApply">
        insert into t_apply_part_time(part_time_id,user_id,apply_time) values(#{part_time_id},#{user_id},#{apply_time})
    </insert>

    <!-- boolean deleteOtherApply(Apply apply); -->
    <delete id="deleteOtherApply">
        delete from t_apply_part_time where part_time_id = #{part_time_id}
    </delete>

    <!-- int selectApply(Apply apply); -->
    <select id="selectApply" resultType="_int">
        select count(id) from t_apply_part_time where part_time_id = #{part_time_id} and user_id = #{user_id}
    </select>

    <!--    查询申请记录（给商家显示）-->
    <!--    List<ApplyInfoVo> getApplyInfoByUser_id(Long user_id);-->
    <select id="getApplyInfoByUser_id" resultMap="applyInfo">
        SELECT p.id,
            p.title,
            t.`name`,
            p.`publishDate`,
            p.`price`,
            p.user_id,
            a.`user_id` AS student_id,
            u.`username`,
            u.`phone`,
            a.`apply_time`,
            a.choose,
            p.doing,
            a.start_time,
            a.over_time
        FROM
            t_part_time p LEFT JOIN t_type t ON p.`type_id`=t.`id`
            LEFT JOIN t_apply_part_time a ON p.`id` = a.`part_time_id`
            LEFT JOIN t_user u ON a.`user_id` = u.`id`
        WHERE p.user_id = #{user_id} AND a.`user_id` IS NOT NULL
        order by doing asc, updateDate desc
    </select>

    <!-- boolean updateStuChoose(Apply apply); -->
    <update id="updateStuChoose">
        update t_apply_part_time
        <set>
            <if test="choose != null">
                choose = #{choose},
            </if>
            <if test="start_time != null">
                start_time = #{start_time},
            </if>
            <if test="over_time != null">
                over_time = #{over_time},
            </if>
        </set>
        where user_id = #{user_id} and part_time_id = #{part_time_id}
    </update>

    <!-- List<StuApplyInfoVo> getApplyInfoByStuId(Long stuId); -->
    <select id="getApplyInfoByStuId" resultType="com.chen.part_time.vo.StuApplyInfoVo">
        SELECT p.id as partTimeId,
            p.title,
            t.`name` as typeName,
            p.`price`,
            pay.name AS payName,
            a.`apply_time`,
            a.choose,
            a.start_time,
            a.over_time
        FROM
            t_part_time p
            LEFT JOIN t_type t ON p.`type_id`=t.`id`
            LEFT JOIN t_payment_type pay ON pay.id = p.pay_id
            LEFT JOIN t_apply_part_time a ON p.`id` = a.`part_time_id`
        WHERE a.user_id = #{stuId}
        order by choose asc, apply_time desc
    </select>

<!--    Apply getOneByApply(Apply apply);-->
    <select id="getOneByApply" resultType="com.chen.part_time.entity.Apply">
        select
            *
        from t_apply_part_time
        <where>
            <if test="user_id != null">
                user_id = #{user_id}
            </if>
            <if test="part_time_id != null">
                and part_time_id = #{part_time_id}
            </if>
        </where>
    </select>
</mapper>
